{"version":3,"sources":["Navbar.js","TextForm.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlfor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","str1","toUpperCase","toLowerCase","split","filter","element","length","defaultProps","titel","aboutText","Alert","alert","class","word","lower","charAt","slice","capitalize","msg","App","setMode","setalert","showalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.93959ea4.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nexport default function Navbar(props) {\n\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        \n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n            </li>\n            {/* <li className=\"nav-item\">\n              <a className=\"nav-link\" to=\"/about\">{props.aboutText}</a>\n            </li>\n  */}\n\n          </ul>\n          {/* <form className=\"d-flex\">\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n              <button className =\"btn btn-outline-success\" type =\"submit\">Search</button>\n            </form> */}\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}  `}>\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n            <label className =\"form-check-label \" htmlfor=\"flexSwitchCheckDefault\">{`Enable ${props.mode==='light'? 'dark' : 'light '}Mode`}</label>\n          </div>\n        </div>\n      </div>\n    </nav>\n\n  )\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string,\n  abouttext: PropTypes.string,\n}\n\nNavbar.defaultProps = {\n  titel: \"set title here\",\n  aboutText: \"about text here\"\n}","// import React from 'react'\nimport React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n\n    const handleOnChange=(event)=>\n    {\n        console.log(\"I was clicked\");\n        setText(event.target.value);    \n    }\n\n    const handleOnClick=()=>\n    {\n        // setText(\"you have clicked this  portion\")\n        var str = text;\n        var str1 = str.toUpperCase();\n        // console.log(\"Upper case was clicked\" + str1);\n        setText(str1);   \n    }\n\n    const handleLoClick=()=>\n    {\n       \n        // setText(\"you have clicked this  portion\")\n        var str = text;\n       \n        var str1 = str.toLowerCase();\n        console.log(\"Upper case was clicked\" + str1);\n        setText(str1);   \n\n    }\n\n    const handleClearClick=()=>\n    {\n       setText('');\n    }\n    \n   \n    \n  \n    const [text,setText] = useState('');\n    return (\n        <>\n        <div className=\"container\" style={{color:props.mode==='light'?'black':'white'}}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n                {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'grey'}} id=\"myBox\" rows=\"8\" ></textarea>\n            </div>\n            <button className=\"btn btn-primary my-2 mx-2\" onClick={handleOnClick}>Convert To Uppercase</button>\n            <button className=\"btn btn-primary my-2 mx-2\" onClick={handleLoClick}>Convert To LowerCase </button>\n            <button className=\"btn btn-primary my-2 mx-2\" onClick={handleClearClick}>Clear Text </button>\n            \n        </div>\n        <div className=\"container my-4\" style={{color:props.mode==='light'?'black':'white'}}>\n       <h2>Your Text summary</h2>\n       <p>{text.split(\" \").filter((element)=>{return element.length!=0}).length} Words And {text.length} Characters</p> \n       <p>Average Reading Time {text.split(\" \").length*(0.08)} Minutes</p>\n       <h2>Preview</h2>\n       <p>{text}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize=(word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\n\n\n\n    }\n    return (\n\n        props.alert&&<div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)}</strong>{props.alert.msg}\n            {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\n        </div>\n\n    )\n}\nexport default Alert;\n\n","// import logo from './logo.svg';\n// import About from './About'; \nimport './App.css';\nimport Navbar from './Navbar';\nimport TextForm from './TextForm';\nimport React, { useState } from 'react';\nimport Alert from './Alert'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null); \n    }, 3000);\n\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'gray';\n      showalert(\"dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils-Dark mode\"\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - npm App\"\n\n    }\n  }\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" mode={mode}/> */}\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n          <TextForm showalert={showalert} heading=\"Enter the text to analyse\" mode={mode} />\n          {/* </Route>    \n        </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}